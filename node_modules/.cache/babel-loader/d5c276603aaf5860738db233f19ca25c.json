{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { user, businesses } from \"../../reduxHelper\";\nexport default function init(WrappedComponent) {\n  var App =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App(props) {\n      _classCallCheck(this, App);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    }\n\n    _createClass(App, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var userID = \"082afffa-f3ca-4ca0-8668-611d7840ec0f\"; // load user if not in state\n\n        if (!this.props.user.response) {\n          this.props.getUser(userID).then(function (user) {}).catch(function (err) {});\n        } // load business is not in state\n\n\n        if (!this.props.business.response) {\n          this.props.getBusiness(userID).then(function (business) {}).catch(function (err) {});\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        if (this.props.user.isLoaded && this.props.business.isLoaded) {\n          return React.createElement(WrappedComponent, this.props);\n        } else {\n          return React.createElement(\"h1\", null, \"Loading\");\n        }\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      user: state.user,\n      business: state.businesses\n    };\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      getUser: function getUser(ID) {\n        return dispatch(user.action(ID));\n      },\n      getBusiness: function getBusiness(userID) {\n        return dispatch(businesses.action(userID));\n      }\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(App);\n}","map":{"version":3,"sources":["/Users/subham/Desktop/work/skip/skip-frontend/src/utils/wrappers/index.js"],"names":["React","connect","user","businesses","init","WrappedComponent","App","props","userID","response","getUser","then","catch","err","business","getBusiness","isLoaded","Component","mapStateToProps","state","mapDispatchToProps","dispatch","ID","action"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAgC,mBAAhC;AAEA,eAAe,SAASC,IAAT,CAAcC,gBAAd,EAA+B;AAAA,MAEpCC,GAFoC;AAAA;AAAA;AAAA;;AAGtC,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA,8EACRA,KADQ;AAGjB;;AANqC;AAAA;AAAA,0CAQnB;AACf,YAAIC,MAAM,GAAG,sCAAb,CADe,CAEf;;AACA,YAAG,CAAC,KAAKD,KAAL,CAAWL,IAAX,CAAgBO,QAApB,EAA6B;AACzB,eAAKF,KAAL,CAAWG,OAAX,CAAmBF,MAAnB,EAA2BG,IAA3B,CAAgC,UAAAT,IAAI,EAAI,CACvC,CADD,EACGU,KADH,CACS,UAAAC,GAAG,EAAI,CAEf,CAHD;AAIH,SARc,CASf;;;AACA,YAAG,CAAC,KAAKN,KAAL,CAAWO,QAAX,CAAoBL,QAAxB,EAAiC;AAC7B,eAAKF,KAAL,CAAWQ,WAAX,CAAuBP,MAAvB,EAA+BG,IAA/B,CAAoC,UAAAG,QAAQ,EAAI,CAE/C,CAFD,EAEGF,KAFH,CAES,UAAAC,GAAG,EAAI,CAEf,CAJD;AAKH;AAEJ;AA1BqC;AAAA;AAAA,+BA4B9B;AACJ,YAAG,KAAKN,KAAL,CAAWL,IAAX,CAAgBc,QAAhB,IAA4B,KAAKT,KAAL,CAAWO,QAAX,CAAoBE,QAAnD,EAA4D;AACxD,iBACI,oBAAC,gBAAD,EAAsB,KAAKT,KAA3B,CADJ;AAGH,SAJD,MAIM;AACF,iBAAO,0CAAP;AACH;AAEJ;AArCqC;;AAAA;AAAA,IAExBP,KAAK,CAACiB,SAFkB;;AAwC1C,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAC/BjB,MAAAA,IAAI,EAACiB,KAAK,CAACjB,IADoB;AAE/BY,MAAAA,QAAQ,EAACK,KAAK,CAAChB;AAFgB,KAAL;AAAA,GAA7B;;AAKA,MAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,WAAK;AACxCX,MAAAA,OAAO,EAAE,iBAACY,EAAD;AAAA,eAAQD,QAAQ,CAACnB,IAAI,CAACqB,MAAL,CAAYD,EAAZ,CAAD,CAAhB;AAAA,OAD+B;AAExCP,MAAAA,WAAW,EAAE,qBAACP,MAAD;AAAA,eAAYa,QAAQ,CAAClB,UAAU,CAACoB,MAAX,CAAkBf,MAAlB,CAAD,CAApB;AAAA;AAF2B,KAAL;AAAA,GAAnC;;AAIA,SAAOP,OAAO,CAACiB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4Cd,GAA5C,CAAP;AACH","sourcesContent":["import React from \"react\"\nimport { connect } from 'react-redux'\nimport { user, businesses} from \"../../reduxHelper\";\n\nexport default function init(WrappedComponent){\n    \n    class App extends React.Component {\n        constructor(props){\n            super(props)\n\n        }\n\n        componentDidMount(){\n            let userID = \"082afffa-f3ca-4ca0-8668-611d7840ec0f\"\n            // load user if not in state\n            if(!this.props.user.response){\n                this.props.getUser(userID).then(user => {\n                }).catch(err => {\n\n                })\n            }\n            // load business is not in state\n            if(!this.props.business.response){\n                this.props.getBusiness(userID).then(business => {\n\n                }).catch(err => {\n\n                })\n            }\n            \n        }\n\n        render(){\n            if(this.props.user.isLoaded && this.props.business.isLoaded){\n                return (\n                    <WrappedComponent {...this.props}/>\n                )\n            }else {\n                return <h1>Loading</h1>\n            }\n           \n        }\n        \n    }\n    const mapStateToProps = state => ({\n       user:state.user,\n       business:state.businesses\n      })\n      \n    const mapDispatchToProps = dispatch => ({\n    getUser: (ID) => dispatch(user.action(ID)),\n    getBusiness: (userID) => dispatch(businesses.action(userID))\n    })\n    return connect(mapStateToProps,mapDispatchToProps)(App);\n}"]},"metadata":{},"sourceType":"module"}