{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { taxCategories, addTaxCategory as _addTaxCategory, deleteTaxCategory as _deleteTaxCategory, updateTaxCategory as _updateTaxCategory } from \"../../../../src/reduxHelper\";\nimport TaxCategory from \"../../../../src/components/organisms/taxCategory\";\nimport { taxCategoryColumns } from \"./taxCategory.data\";\nimport uuid from \"uuid/v4\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      taxCategoryTableData: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadTaxCategoryData();\n    }\n  }, {\n    key: \"handleCreateTaxes\",\n    value: function handleCreateTaxes(data, cb) {\n      var _this2 = this;\n\n      data.values.taxcategoryID = uuid();\n      data.values.business = this.props.business.response.data.businessID;\n      this.props.addTaxCategory(data.values).then(function (res) {\n        _this2.loadTaxCategoryData();\n\n        cb({\n          status: true,\n          message: \"Taxes created successful\"\n        });\n      }).catch(function (err) {\n        console.log(err);\n        cb({\n          status: false,\n          message: \"SomeError occured\"\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (true) return React.createElement(TaxCategory, {\n        rowSelection: {},\n        columns: taxCategoryColumns,\n        columnData: this.state.taxCategoryTableData,\n        onCreate: function onCreate(data, cb) {\n          return _this3.handleCreateTaxes(data, cb);\n        }\n      });else return React.createElement(\"h1\", null, \"Loading...\");\n    }\n  }, {\n    key: \"_createTaxCategoryColoumns\",\n    value: function _createTaxCategoryColoumns(data) {\n      var _this4 = this;\n\n      var temp = [];\n\n      if (_Array$isArray(data)) {\n        data.map(function (item) {\n          var object = {};\n          object.name = item.name;\n          object.taxCode = item.taxcategoryID;\n          object.handleFeatures = {\n            handleDelete: function handleDelete(id) {\n              console.log(id);\n\n              _this4.props.deleteTaxCategory(id).then(function (res) {\n                _this4.loadTaxCategoryData();\n              }).catch(function (err) {\n                console.log(err);\n              });\n            },\n            handleUpdate: function handleUpdate(data, id, cb) {\n              // console.log(\"clicked\", data, id, cb)\n              _this4.props.updateTaxCategory(id, data.values).then(function (res) {\n                _this4.loadTaxCategoryData();\n\n                cb({\n                  status: true,\n                  message: \"Tax category updated\"\n                });\n              }).catch(function (err) {\n                console.log(err);\n                cb({\n                  status: false,\n                  message: \"Some Error while updating\"\n                });\n              });\n            }\n          };\n          temp.push(object);\n        });\n      } else {\n        var object = {};\n        object.name = item.name;\n        object.taxCode = item.taxcategoryID;\n        object.handleFeatures = {\n          handleDelete: function handleDelete(id) {\n            console.log(id);\n\n            _this4.props.deleteTaxCategory(id).then(function (res) {\n              _this4.loadTaxCategoryData();\n            }).catch(function (err) {\n              console.log(err);\n            });\n          },\n          handleUpdate: function handleUpdate(data, id, cb) {\n            // console.log(\"clicked\", data, id, cb)\n            _this4.props.updateTaxCategory(id, data.values).then(function (res) {\n              _this4.loadTaxCategoryData();\n\n              cb({\n                status: true,\n                message: \"Tax category updated\"\n              });\n            }).catch(function (err) {\n              console.log(err);\n              cb({\n                status: false,\n                message: \"Some Error while updating\"\n              });\n            });\n          }\n        };\n        temp.push(object);\n      }\n\n      return temp;\n    } // Integrated with test api\n\n  }, {\n    key: \"loadTaxCategoryData\",\n    value: function loadTaxCategoryData() {\n      var _this5 = this;\n\n      var urlParams = {};\n      urlParams.businessID = this.props.business.response.data.businessID;\n      this.props.getTaxCategories(urlParams).then(function (res) {\n        _this5.setState({\n          taxCategoryTableData: _this5._createTaxCategoryColoumns(_this5.props.taxCategories.response.data)\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    business: state.businesses,\n    taxCategories: state.taxCategories,\n    deleteTaxCategory: state.deleteTaxCategory,\n    updateTaxCategory: state.updateTaxCategory\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getTaxCategories: function getTaxCategories(object) {\n      return dispatch(taxCategories.action(object));\n    },\n    addTaxCategory: function addTaxCategory(object) {\n      return dispatch(_addTaxCategory.action(object));\n    },\n    deleteTaxCategory: function deleteTaxCategory(taxcategoryID) {\n      return dispatch(_deleteTaxCategory.action(taxcategoryID));\n    },\n    updateTaxCategory: function updateTaxCategory(taxcategoryID, object) {\n      return dispatch(_updateTaxCategory.action(taxcategoryID, object));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/subham/Desktop/work/skip/skip-frontend/pages/dashboard/.taxes/.taxCategory/index.js"],"names":["React","Component","connect","taxCategories","addTaxCategory","deleteTaxCategory","updateTaxCategory","TaxCategory","taxCategoryColumns","uuid","App","props","state","taxCategoryTableData","loadTaxCategoryData","data","cb","values","taxcategoryID","business","response","businessID","then","res","status","message","catch","err","console","log","handleCreateTaxes","temp","map","item","object","name","taxCode","handleFeatures","handleDelete","id","handleUpdate","push","urlParams","getTaxCategories","setState","_createTaxCategoryColoumns","mapStateToProps","businesses","mapDispatchToProps","dispatch","action"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport { taxCategories, addTaxCategory, deleteTaxCategory, updateTaxCategory } from \"../../../../src/reduxHelper\"\nimport TaxCategory from \"../../../../src/components/organisms/taxCategory\"\nimport { taxCategoryColumns } from \"./taxCategory.data\"\n\nimport uuid from \"uuid/v4\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { taxCategoryTableData: [] }\n  }\n\n  componentDidMount() {\n    this.loadTaxCategoryData()\n  }\n\n  handleCreateTaxes(data, cb) {\n    data.values.taxcategoryID = uuid()\n    data.values.business = this.props.business.response.data.businessID\n      this.props.addTaxCategory(data.values).then(res =>{\n        this.loadTaxCategoryData()\n        cb({status:true, message: \"Taxes created successful\"})\n      }).catch(err => {\n        console.log(err)\n        cb({status:false, message: \"SomeError occured\"})\n      })\n    }\n\n  render() {\n    if (true)\n      return (\n        <TaxCategory\n          rowSelection={{}}\n          columns={taxCategoryColumns}\n          columnData={this.state.taxCategoryTableData}\n          onCreate={(data,cb) => this.handleCreateTaxes(data,cb)}\n        />\n      )\n    else return <h1>Loading...</h1>\n  }\n\n  _createTaxCategoryColoumns(data) {\n    let temp = []\n    if (Array.isArray(data)) {\n      data.map(item => {\n        let object = {}\n        object.name = item.name\n        object.taxCode = item.taxcategoryID\n        object.handleFeatures = {\n          handleDelete: (id) => {\n            console.log(id)\n            this.props.deleteTaxCategory(id).then(res => {\n              this.loadTaxCategoryData();\n            }).catch(err => {\n              console.log(err);\n            })\n          },\n          handleUpdate: (data, id, cb) => {\n            // console.log(\"clicked\", data, id, cb)\n            this.props.updateTaxCategory(id, data.values).then(res => {\n              this.loadTaxCategoryData()\n              cb({ status: true, message: \"Tax category updated\" })\n            }).catch(err => {\n              console.log(err)\n              cb({ status: false, message: \"Some Error while updating\" })\n            })\n          }\n        }\n        temp.push(object)\n      })\n    } else {\n      let object = {}\n      object.name = item.name\n      object.taxCode = item.taxcategoryID\n      object.handleFeatures = {\n        handleDelete: (id) => {\n          console.log(id)\n          this.props.deleteTaxCategory(id).then(res => {\n            this.loadTaxCategoryData();\n          }).catch(err => {\n            console.log(err);\n          })\n        },\n        handleUpdate: (data, id, cb) => {\n          // console.log(\"clicked\", data, id, cb)\n          this.props.updateTaxCategory(id, data.values).then(res => {\n            this.loadTaxCategoryData()\n            cb({ status: true, message: \"Tax category updated\" })\n          }).catch(err => {\n            console.log(err)\n            cb({ status: false, message: \"Some Error while updating\" })\n          })\n        }\n      }\n      temp.push(object)\n    }\n    return temp\n  }\n\n  // Integrated with test api\n  loadTaxCategoryData() {\n    let urlParams = {}\n    urlParams.businessID = this.props.business.response.data.businessID\n    this.props\n      .getTaxCategories(urlParams)\n      .then(res => {\n        this.setState({\n          taxCategoryTableData: this._createTaxCategoryColoumns(\n            this.props.taxCategories.response.data\n          )\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nconst mapStateToProps = state => ({\n  business: state.businesses,\n  taxCategories: state.taxCategories,\n  deleteTaxCategory: state.deleteTaxCategory,\n  updateTaxCategory: state.updateTaxCategory\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getTaxCategories: object => dispatch(taxCategories.action(object)),\n  addTaxCategory: object => dispatch(addTaxCategory.action(object)),\n  deleteTaxCategory: (taxcategoryID) => dispatch(deleteTaxCategory.action(taxcategoryID)),\n  updateTaxCategory: (taxcategoryID, object) => dispatch(updateTaxCategory.action(taxcategoryID, object))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n"]},"metadata":{},"sourceType":"module"}