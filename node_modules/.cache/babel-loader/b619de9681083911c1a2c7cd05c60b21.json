{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nimport { Form, asField, Select, Option } from \"informed\";\n// import 'antd/dist/antd.css';\nvar selectStyle = {\n  backgroundColor: \"#fff\",\n  border: \"1px solid #d9d9d9\",\n  height: \"32px\",\n  borderRadius: \"4px\"\n};\nvar Text_type1 = asField(function (_ref) {\n  var fieldState = _ref.fieldState,\n      fieldApi = _ref.fieldApi,\n      props = _objectWithoutProperties(_ref, [\"fieldState\", \"fieldApi\"]);\n\n  var value = fieldState.value;\n  var setValue = fieldApi.setValue,\n      setTouched = fieldApi.setTouched;\n\n  var _onChange = props.onChange,\n      _onBlur = props.onBlur,\n      initialValue = props.initialValue,\n      forwardedRef = props.forwardedRef,\n      rest = _objectWithoutProperties(props, [\"onChange\", \"onBlur\", \"initialValue\", \"forwardedRef\"]);\n\n  return React.createElement(_Input, _extends({}, rest, {\n    ref: forwardedRef,\n    onChange: function onChange(e) {\n      setValue(e.target.value);\n      console.log(value);\n\n      if (_onChange) {\n        _onChange(e);\n      }\n    },\n    onBlur: function onBlur(e) {\n      setTouched();\n\n      if (_onBlur) {\n        _onBlur(e);\n      }\n    }\n  }));\n});\nvar Search = _Input.Search;\nexport var Asearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Asearch, _React$Component);\n\n  function Asearch() {\n    _classCallCheck(this, Asearch);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Asearch).apply(this, arguments));\n  }\n\n  _createClass(Asearch, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Search, {\n        placeholder: this.props.placeholder,\n        style: {\n          width: 360\n        },\n        onSearch: function onSearch(value) {\n          return console.log(value);\n        },\n        enterButton: true\n      }));\n    }\n  }]);\n\n  return Asearch;\n}(React.Component); //  Not required we gonna use from .... bootstrap\n\nvar RG = _Radio.Group;\nvar R = asField(function (_ref2) {\n  var fieldState = _ref2.fieldState,\n      fieldApi = _ref2.fieldApi,\n      props = _objectWithoutProperties(_ref2, [\"fieldState\", \"fieldApi\"]);\n\n  var value = fieldState.value;\n  var setValue = fieldApi.setValue,\n      setTouched = fieldApi.setTouched;\n\n  var _onChange2 = props.onChange,\n      _onBlur2 = props.onBlur,\n      initialValue = props.initialValue,\n      forwardedRef = props.forwardedRef,\n      rest = _objectWithoutProperties(props, [\"onChange\", \"onBlur\", \"initialValue\", \"forwardedRef\"]);\n\n  return React.createElement(_Radio, _extends({\n    type: \"radio\"\n  }, rest, {\n    ref: forwardedRef,\n    onChange: function onChange(e) {\n      setValue(e.target.value);\n      console.log(value);\n\n      if (_onChange2) {\n        _onChange2(e);\n      }\n    },\n    onBlur: function onBlur(e) {\n      setTouched();\n\n      if (_onBlur2) {\n        _onBlur2(e);\n      }\n    }\n  }));\n}); //  Not required we gonna use from .... bootstrap\n\nvar Check = asField(function (_ref3) {\n  var fieldState = _ref3.fieldState,\n      fieldApi = _ref3.fieldApi,\n      props = _objectWithoutProperties(_ref3, [\"fieldState\", \"fieldApi\"]);\n\n  var value = fieldState.value;\n  var setValue = fieldApi.setValue,\n      setTouched = fieldApi.setTouched;\n  props.field = props.name;\n\n  var _onChange3 = props.onChange,\n      _onBlur3 = props.onBlur,\n      initialValue = props.initialValue,\n      forwardedRef = props.forwardedRef,\n      rest = _objectWithoutProperties(props, [\"onChange\", \"onBlur\", \"initialValue\", \"forwardedRef\"]);\n\n  return React.createElement(_Checkbox, _extends({}, rest, {\n    ref: forwardedRef,\n    onChange: function onChange(e) {\n      setValue(e.target.value);\n      console.log(\"checked = \".concat(e.target.checked));\n\n      if (_onChange3) {\n        _onChange3(e);\n      }\n    },\n    onBlur: function onBlur(e) {\n      setTouched();\n\n      if (_onBlur3) {\n        _onBlur3(e);\n      }\n    }\n  }));\n});\nvar TextArea = _Input.TextArea;\nvar Tarea = asField(function (_ref4) {\n  var fieldState = _ref4.fieldState,\n      fieldApi = _ref4.fieldApi,\n      props = _objectWithoutProperties(_ref4, [\"fieldState\", \"fieldApi\"]);\n\n  var value = fieldState.value;\n  var setValue = fieldApi.setValue,\n      setTouched = fieldApi.setTouched;\n\n  var _onChange4 = props.onChange,\n      _onBlur4 = props.onBlur,\n      initialValue = props.initialValue,\n      forwardedRef = props.forwardedRef,\n      rest = _objectWithoutProperties(props, [\"onChange\", \"onBlur\", \"initialValue\", \"forwardedRef\"]);\n\n  return React.createElement(TextArea, _extends({}, rest, {\n    ref: forwardedRef,\n    onChange: function onChange(e) {\n      setValue(e.target.value);\n      console.log(value);\n\n      if (_onChange4) {\n        _onChange4(e);\n      }\n    },\n    onBlur: function onBlur(e) {\n      setTouched();\n\n      if (_onBlur4) {\n        _onBlur4(e);\n      }\n    }\n  }));\n});\nvar O = Select.Option;\n\nvar Sel = function Sel(props) {\n  var style = _objectSpread({}, props.style, selectStyle);\n\n  return React.createElement(Select, {\n    field: props.field,\n    style: style\n  }, props.option.map(function (data, index) {\n    return React.createElement(Option, {\n      key: index,\n      value: data.value\n    }, data.name);\n  }));\n};\n\nexport { Form, Text_type1, Check, O, Tarea, Sel, R, RG };","map":{"version":3,"sources":["/Users/subham/Desktop/work/skip/skip-frontend/src/utils/xinformed/antdesignInformed.js"],"names":["React","Form","asField","Select","Option","selectStyle","backgroundColor","border","height","borderRadius","Text_type1","fieldState","fieldApi","props","value","setValue","setTouched","onChange","onBlur","initialValue","forwardedRef","rest","e","target","console","log","Search","Asearch","placeholder","width","Component","RG","Group","R","Check","field","name","checked","TextArea","Tarea","O","Sel","style","option","map","data","index"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Form, asField, Select, Option } from \"informed\"\nimport { Input, Radio, Checkbox } from \"antd\"\n// import 'antd/dist/antd.css';\n\nconst selectStyle = {\n  backgroundColor: \"#fff\",\n  border: \"1px solid #d9d9d9\",\n  height: \"32px\",\n  borderRadius: \"4px\"\n}\n\nconst Text_type1 = asField(({ fieldState, fieldApi, ...props }) => {\n  const { value } = fieldState\n  const { setValue, setTouched } = fieldApi\n  const { onChange, onBlur, initialValue, forwardedRef, ...rest } = props\n  return (\n    <Input\n      {...rest}\n      ref={forwardedRef}\n      onChange={e => {\n        setValue(e.target.value)\n        console.log(value)\n        if (onChange) {\n          onChange(e)\n        }\n      }}\n      onBlur={e => {\n        setTouched()\n        if (onBlur) {\n          onBlur(e)\n        }\n      }}\n    />\n  )\n})\n\nconst Search = Input.Search\nexport class Asearch extends React.Component {\n  render() {\n    return (\n      <div>\n        {/* pass on search from props */}\n        <Search\n          placeholder={this.props.placeholder}\n          style={{ width: 360 }}\n          onSearch={value => console.log(value)}\n          enterButton\n        />\n      </div>\n    )\n  }\n}\n\n//  Not required we gonna use from .... bootstrap\nconst RG = Radio.Group\nconst R = asField(({ fieldState, fieldApi, ...props }) => {\n  const { value } = fieldState\n  const { setValue, setTouched } = fieldApi\n  const { onChange, onBlur, initialValue, forwardedRef, ...rest } = props\n  return (\n    <Radio\n      type=\"radio\"\n      {...rest}\n      ref={forwardedRef}\n      onChange={e => {\n        setValue(e.target.value)\n        console.log(value)\n        if (onChange) {\n          onChange(e)\n        }\n      }}\n      onBlur={e => {\n        setTouched()\n        if (onBlur) {\n          onBlur(e)\n        }\n      }}\n    />\n  )\n})\n\n//  Not required we gonna use from .... bootstrap\nconst Check = asField(({ fieldState, fieldApi, ...props }) => {\n  const { value } = fieldState\n  const { setValue, setTouched } = fieldApi\n  props.field = props.name\n  const { onChange, onBlur, initialValue, forwardedRef, ...rest } = props\n  return (\n    <Checkbox\n      {...rest}\n      ref={forwardedRef}\n      onChange={e => {\n        setValue(e.target.value)\n        console.log(`checked = ${e.target.checked}`)\n        if (onChange) {\n          onChange(e)\n        }\n      }}\n      onBlur={e => {\n        setTouched()\n        if (onBlur) {\n          onBlur(e)\n        }\n      }}\n    />\n  )\n})\n\nconst { TextArea } = Input\n\nconst Tarea = asField(({ fieldState, fieldApi, ...props }) => {\n  const { value } = fieldState\n  const { setValue, setTouched } = fieldApi\n  const { onChange, onBlur, initialValue, forwardedRef, ...rest } = props\n  return (\n    <TextArea\n      {...rest}\n      ref={forwardedRef}\n      onChange={e => {\n        setValue(e.target.value)\n        console.log(value)\n        if (onChange) {\n          onChange(e)\n        }\n      }}\n      onBlur={e => {\n        setTouched()\n        if (onBlur) {\n          onBlur(e)\n        }\n      }}\n    />\n  )\n})\n\nconst O = Select.Option\n\nconst Sel = props => {\n  let style = { ...props.style, ...selectStyle }\n  return (\n    <Select field={props.field} style={style}>\n      {props.option.map((data, index) => (\n        <Option key={index} value={data.value}>\n          {data.name}\n        </Option>\n      ))}\n    </Select>\n  )\n}\n\nexport { Form, Text_type1, Check, O, Tarea, Sel, R, RG }\n"]},"metadata":{},"sourceType":"module"}