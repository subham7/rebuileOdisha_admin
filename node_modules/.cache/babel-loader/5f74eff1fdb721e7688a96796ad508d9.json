{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { employees, addEmployee as _addEmployee, employeelocations, addEmployeeLocation as _addEmployeeLocation, deleteEmployee as _deleteEmployee, updateEmployee as _updateEmployee } from \"../../../src/reduxHelper\";\nimport Employees from \"./../../../src/components/templates/employee\";\nimport { employeeColumns, employeeColumnData } from \"./employees.data\";\nimport uuid from \"uuid/v4\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      employeesTableData: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadEmployeeData();\n    }\n  }, {\n    key: \"handleCreateLocation\",\n    value: function handleCreateLocation(data, cb) {\n      var _this2 = this;\n\n      data.values.userID = uuid();\n      data.values.business = this.props.business.response.data.businessID;\n      data.values.usertype = \"8a0930f9-5aab-11e9-9666-f8cab8258ec4\";\n      this.props.addEmployee(data.values).then(function (res) {\n        _this2.loadEmployeeData();\n\n        cb({\n          status: true,\n          message: \"Employee created successful\"\n        });\n      }).catch(function (err) {\n        console.log(err);\n        cb({\n          status: false,\n          message: \"SomeError occured\"\n        });\n      });\n    }\n  }, {\n    key: \"handleAssignUserLocation\",\n    value: function handleAssignUserLocation(data, cb) {\n      console.log(data.values);\n      this.props.addEmployeeLocation(data.values).then(function (res) {\n        cb({\n          status: true,\n          message: \"User Assigned to location successful\"\n        });\n      }).catch(function (err) {\n        console.log(err);\n        cb({\n          status: false,\n          message: \"SomeError occured\"\n        });\n      });\n    } // 8a0930f9-5aab-11e9-9666-f8cab8258ec4\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (true) return React.createElement(Employees, {\n        rowSelection: {},\n        columns: employeeColumns,\n        columnData: this.state.employeesTableData,\n        onCreate: function onCreate(data, cb) {\n          return _this3.handleCreateLocation(data, cb);\n        }\n      });else return React.createElement(\"h1\", null, \"Loading...\");\n    }\n  }, {\n    key: \"_createEmployeeColumns\",\n    value: function _createEmployeeColumns(data) {\n      var _this4 = this;\n\n      var temp = [];\n\n      if (_Array$isArray(data)) {\n        data.map(function (item) {\n          var object = {};\n          object.name = item.firstName + \" \" + item.LastName;\n          object.userID = item.userID;\n          object.userName = item.userName;\n          object.email = item.email;\n          object.phone = item.phone;\n          object.assign = {\n            onCreate: function onCreate(data, cb) {\n              data.values.user = item.userID;\n\n              _this4.handleAssignUserLocation(data, cb);\n            }\n          };\n          object.handleFeatures = {\n            handleDelete: function handleDelete(id) {\n              // let businessID = this.props.business.response.data.businessID;\n              _this4.props.deleteEmployee(id).then(function (res) {\n                _this4.loadEmployeeData();\n              }).catch(function (err) {\n                console.log(err);\n              });\n            },\n            handleUpdate: function handleUpdate(data, id, cb) {\n              _this4.props.updateEmployee(id, data.values).then(function (res) {\n                _this4.loadEmployeeData();\n\n                cb({\n                  status: true,\n                  message: \"Employee data updated\"\n                });\n              }).catch(function (err) {\n                console.log(err);\n                cb({\n                  status: false,\n                  message: \"Some Error occured while updating\"\n                });\n              });\n            }\n          };\n          temp.push(object);\n        });\n      } else {\n        var object = {};\n        object.name = data.firstName + \" \" + data.LastName;\n        object.userName = data.userName;\n        object.email = data.email;\n        object.phone = data.phone;\n        object.assign = {\n          onCreate: function onCreate(data, cb) {\n            data.values.user = item.userID;\n\n            _this4.handleAssignUserLocation(data, cb);\n          }\n        };\n        object.handleFeatures = {\n          handleDelete: function handleDelete(id) {\n            // let businessID = this.props.business.response.data.businessID;\n            _this4.props.deleteEmployee(id).then(function (res) {\n              _this4.loadEmployeeData();\n            }).catch(function (err) {\n              console.log(err);\n            });\n          },\n          handleUpdate: function handleUpdate(data, id, cb) {\n            _this4.props.updateEmployee(id, data.values).then(function (res) {\n              _this4.loadEmployeeData();\n\n              cb({\n                status: true,\n                message: \"Employee data updated\"\n              });\n            }).catch(function (err) {\n              console.log(err);\n              cb({\n                status: false,\n                message: \"Some Error occured while updating\"\n              });\n            });\n          }\n        };\n        temp.push(object);\n      }\n\n      return temp;\n    } // Integrated with test api\n\n  }, {\n    key: \"loadEmployeeData\",\n    value: function loadEmployeeData() {\n      var _this5 = this;\n\n      var urlParams = {};\n      urlParams.businessID = this.props.business.response.data.businessID;\n      this.props.getEmployees(urlParams).then(function (res) {\n        // console.log(res)\n        _this5.setState({\n          employeesTableData: _this5._createEmployeeColumns(_this5.props.employees.response.data)\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    business: state.businesses,\n    employees: state.employees,\n    addEmployee: state.addEmployee,\n    updateEmployee: state.updateEmployee,\n    deleteEmployee: state.deleteEmployee\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getEmployees: function getEmployees(object) {\n      return dispatch(employees.action(object));\n    },\n    addEmployee: function addEmployee(object) {\n      return dispatch(_addEmployee.action(object));\n    },\n    addEmployeeLocation: function addEmployeeLocation(object) {\n      return dispatch(_addEmployeeLocation.action(object));\n    },\n    deleteEmployee: function deleteEmployee(employeeID) {\n      return dispatch(_deleteEmployee.action(employeeID));\n    },\n    updateEmployee: function updateEmployee(employeeID, object) {\n      return dispatch(_updateEmployee.action(employeeID, object));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/subham/Desktop/work/skip/skip-frontend/pages/dashboard/.employees/index.js"],"names":["React","Component","connect","employees","addEmployee","employeelocations","addEmployeeLocation","deleteEmployee","updateEmployee","Employees","employeeColumns","employeeColumnData","uuid","App","props","state","employeesTableData","loadEmployeeData","data","cb","values","userID","business","response","businessID","usertype","then","res","status","message","catch","err","console","log","handleCreateLocation","temp","map","item","object","name","firstName","LastName","userName","email","phone","assign","onCreate","user","handleAssignUserLocation","handleFeatures","handleDelete","id","handleUpdate","push","urlParams","getEmployees","setState","_createEmployeeColumns","mapStateToProps","businesses","mapDispatchToProps","dispatch","action","employeeID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport { employees, addEmployee, employeelocations, addEmployeeLocation ,deleteEmployee, updateEmployee} from \"../../../src/reduxHelper\"\nimport Employees from \"./../../../src/components/templates/employee\"\nimport { employeeColumns, employeeColumnData } from \"./employees.data\"\n\nimport uuid from \"uuid/v4\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { employeesTableData: [] }\n  }\n\n  componentDidMount() {\n    this.loadEmployeeData()\n  }\n  handleCreateLocation(data, cb) {\n    data.values.userID = uuid()\n    data.values.business = this.props.business.response.data.businessID\n    data.values.usertype = \"8a0930f9-5aab-11e9-9666-f8cab8258ec4\"\n    this.props\n      .addEmployee(data.values)\n      .then(res => {\n        this.loadEmployeeData()\n        cb({ status: true, message: \"Employee created successful\" })\n      })\n      .catch(err => {\n        console.log(err)\n        cb({ status: false, message: \"SomeError occured\" })\n      })\n  }\n  \n  handleAssignUserLocation(data, cb) {\n    console.log(data.values)\n    this.props.addEmployeeLocation(data.values)\n      .then(res => {\n        cb({ status: true, message: \"User Assigned to location successful\" })\n      })\n      .catch(err => {\n        console.log(err)\n        cb({ status: false, message: \"SomeError occured\" })\n      })\n  }\n\n\n  // 8a0930f9-5aab-11e9-9666-f8cab8258ec4\n  render() {\n    if (true)\n      return (\n        <Employees\n          rowSelection={{}}\n          columns={employeeColumns}\n          columnData={this.state.employeesTableData}\n          onCreate={(data, cb) => this.handleCreateLocation(data, cb)}\n        />\n      )\n    else return <h1>Loading...</h1>\n  }\n\n  _createEmployeeColumns(data) {\n    let temp = []\n    if (Array.isArray(data)) {\n      data.map(item => {\n        let object = {}\n        object.name = item.firstName + \" \" + item.LastName\n        object.userID = item.userID\n        object.userName = item.userName\n        object.email = item.email\n        object.phone = item.phone\n        object.assign = {\n          onCreate: (data,cb) => {\n          data.values.user = item.userID\n          this.handleAssignUserLocation(data,cb) \n        }}\n        object.handleFeatures = {\n          handleDelete: (id) => {\n            // let businessID = this.props.business.response.data.businessID;\n            this.props.deleteEmployee(id).then(res => {\n              this.loadEmployeeData();\n            }).catch(err => {\n              console.log(err);\n            })\n          },\n          handleUpdate: (data, id, cb) => {\n            this.props.updateEmployee(id, data.values).then(res => {\n              this.loadEmployeeData()\n              cb({ status: true, message: \"Employee data updated\" })\n            }).catch(err => {\n              console.log(err)\n              cb({ status: false, message: \"Some Error occured while updating\" })\n            })\n          }\n        }\n        temp.push(object)\n      })\n    } else {\n      let object = {}\n      object.name = data.firstName + \" \" + data.LastName\n      object.userName = data.userName\n      object.email = data.email\n      object.phone = data.phone\n      object.assign = {\n        onCreate: (data,cb) => {\n        data.values.user = item.userID\n        this.handleAssignUserLocation(data,cb) \n      }}\n      object.handleFeatures = {\n        handleDelete: (id) => {\n          // let businessID = this.props.business.response.data.businessID;\n          this.props.deleteEmployee(id).then(res => {\n            this.loadEmployeeData();\n          }).catch(err => {\n            console.log(err);\n          })\n        },\n        handleUpdate: (data, id, cb) => {\n          this.props.updateEmployee(id, data.values).then(res => {\n            this.loadEmployeeData()\n            cb({ status: true, message: \"Employee data updated\" })\n          }).catch(err => {\n            console.log(err)\n            cb({ status: false, message: \"Some Error occured while updating\" })\n          })\n        }\n      }\n      temp.push(object)\n    }\n    return temp\n  }\n\n  // Integrated with test api\n  loadEmployeeData() {\n    let urlParams = {}\n    urlParams.businessID = this.props.business.response.data.businessID\n    this.props\n      .getEmployees(urlParams)\n      .then(res => {\n        // console.log(res)\n        this.setState({\n          employeesTableData: this._createEmployeeColumns(\n            this.props.employees.response.data\n          )\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nconst mapStateToProps = state => ({\n  business: state.businesses,\n  employees: state.employees,\n  addEmployee: state.addEmployee,\n  updateEmployee: state.updateEmployee,\n  deleteEmployee: state.deleteEmployee\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getEmployees: (object) => dispatch(employees.action(object)),\n  addEmployee: (object) => dispatch(addEmployee.action(object)),\n  addEmployeeLocation: (object) => dispatch(addEmployeeLocation.action(object)),\n  deleteEmployee: (employeeID) => dispatch(deleteEmployee.action(employeeID)),\n  updateEmployee: (employeeID, object) => dispatch(updateEmployee.action(employeeID, object))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n"]},"metadata":{},"sourceType":"module"}