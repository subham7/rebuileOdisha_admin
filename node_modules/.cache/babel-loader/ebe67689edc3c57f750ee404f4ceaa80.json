{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { productCategories, addProductCategory as _addProductCategory, deleteProductCategory as _deleteProductCategory, updateProductCategory as _updateProductCategory } from \"../../../../src/reduxHelper\";\nimport Categories from \"../../../../src/components/organisms/categories\";\nimport ButtonIcon from '../../../../src/components/atoms/tableButton';\nimport Model from \"../../../../src/components/molecules/modelButton\";\nimport createCategory from \"../../../../src/components/organisms/forms/createCategory\";\nimport { categoryData, categoryColumns } from \"./category.data\";\nimport uuidv4 from \"uuid/v4\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_createProductCategory\", function (data) {\n      var temp = [];\n\n      if (_Array$isArray(data)) {\n        data.map(function (item) {\n          var object = {};\n          object.name = item.name, object.productcategoryID = item.productcategoryID, // object.inventory = [50],\n          object.handleFeatures = {\n            handleDelete: function handleDelete(id) {\n              // let businessID = this.props.business.response.data.businessID;\n              _this.props.deleteProductCategory(id).then(function (res) {\n                _this.loadProductCategoryData();\n              }).catch(function (err) {\n                console.log(err);\n              });\n            },\n            editProductCategory: function editProductCategory(data, id, cb) {\n              // console.log(\"clicked\", data, id, cb)\n              _this.props.updateProductCategory(id, data.values).then(function (res) {\n                _this.loadProductCategoryData();\n\n                cb({\n                  status: true,\n                  message: \"Product category updated\"\n                });\n              }).catch(function (err) {\n                console.log(err);\n                cb({\n                  status: false,\n                  message: \"Some Error while updating\"\n                });\n              });\n            }\n          };\n          temp.push(object);\n        });\n      } else {\n        var object = {};\n        object.name = data.name, object.productcategoryID = data.productcategoryID, object.handleFeatures = {\n          handleDelete: function handleDelete(id) {\n            // let businessID = this.props.business.response.data.businessID;\n            _this.props.deleteProductCategory(id).then(function (res) {\n              _this.loadProductCategoryData();\n            }).catch(function (err) {\n              console.log(err);\n            });\n          },\n          editProductCategory: function editProductCategory(data, id, cb) {\n            _this.props.updateProductCategory(id, data.values).then(function (res) {\n              _this.loadProductCategoryData();\n\n              cb({\n                status: true,\n                message: \"Product category updated\"\n              });\n            }).catch(function (err) {\n              console.log(err);\n              cb({\n                status: false,\n                message: \"Some Error occured while updating\"\n              });\n            });\n          }\n        };\n        temp.push(object);\n      }\n\n      return temp;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadProductCategoryData\", function () {\n      var urlParams = {};\n      urlParams.businessID = _this.props.business.response.data.businessID;\n\n      _this.props.getProductCategory(urlParams).then(function (res) {\n        _this.setState({\n          productsTableData: _this._createProductCategory(res)\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    });\n\n    _this.state = {\n      productsTableData: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadProductCategoryData();\n    }\n  }, {\n    key: \"handleCreateProductCategory\",\n    value: function handleCreateProductCategory(data, cb) {\n      var _this2 = this;\n\n      console.log(data);\n      data.values.productcategoryID = uuidv4();\n      data.values.business = this.props.business.response.data.businessID;\n      this.props.addProductCategory(data.values).then(function (res) {\n        _this2.loadProductCategoryData();\n\n        cb({\n          status: true,\n          message: \"Product category added\"\n        });\n      }).catch(function (err) {\n        console.log(err);\n        cb({\n          status: false,\n          message: \"Some Error occured\"\n        });\n      });\n    }\n  }, {\n    key: \"callback\",\n    value: function callback(key) {// console.log(key);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (true) {\n        return React.createElement(\"div\", null, React.createElement(Categories, {\n          cardData: categoryData.cardData,\n          cascaderData: categoryData.cascaderData,\n          columns: categoryData.categoryColumns,\n          columnData: this.state.productsTableData,\n          onCreate: function onCreate(data, cb) {\n            return _this3.handleCreateProductCategory(data, cb);\n          }\n        }));\n      } else {\n        return React.createElement(\"h1\", null, \"Loading\");\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    business: state.businesses,\n    productCategories: state.productCategories,\n    addProductCategory: state.addProductCategory,\n    deleteProductCategory: state.deleteProductCategory,\n    updateProductCategory: state.updateProductCategory\n  };\n}; // Example Syntax for writing dispatch\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getProductCategory: function getProductCategory(businessID) {\n      return dispatch(productCategories.action(businessID));\n    },\n    addProductCategory: function addProductCategory(businessID, object) {\n      return dispatch(_addProductCategory.action(businessID, object));\n    },\n    deleteProductCategory: function deleteProductCategory(productcategoryID) {\n      return dispatch(_deleteProductCategory.action(productcategoryID));\n    },\n    updateProductCategory: function updateProductCategory(productcategoryID, object) {\n      return dispatch(_updateProductCategory.action(productcategoryID, object));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/subham/Desktop/work/skip/skip-frontend/pages/dashboard/.products/.productcategories/index.js"],"names":["React","connect","productCategories","addProductCategory","deleteProductCategory","updateProductCategory","Categories","ButtonIcon","Model","createCategory","categoryData","categoryColumns","uuidv4","App","props","data","temp","map","item","object","name","productcategoryID","handleFeatures","handleDelete","id","then","res","loadProductCategoryData","catch","err","console","log","editProductCategory","cb","values","status","message","push","urlParams","businessID","business","response","getProductCategory","setState","productsTableData","_createProductCategory","state","key","cardData","cascaderData","handleCreateProductCategory","Component","mapStateToProps","businesses","mapDispatchToProps","dispatch","action"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { productCategories, addProductCategory, deleteProductCategory, updateProductCategory } from \"../../../../src/reduxHelper\"\r\nimport Categories from \"../../../../src/components/organisms/categories\"\r\nimport ButtonIcon from '../../../../src/components/atoms/tableButton';\r\nimport Model from \"../../../../src/components/molecules/modelButton\"\r\nimport createCategory from \"../../../../src/components/organisms/forms/createCategory\"\r\n\r\nimport { categoryData, categoryColumns } from \"./category.data\"\r\nimport { Button } from 'antd';\r\nimport uuidv4 from \"uuid/v4\"\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      productsTableData: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadProductCategoryData()\r\n  }\r\n\r\n  handleCreateProductCategory(data, cb) {\r\n    console.log(data)\r\n    data.values.productcategoryID = uuidv4()\r\n    data.values.business = this.props.business.response.data.businessID\r\n    this.props\r\n      .addProductCategory(data.values)\r\n      .then(res => {\r\n        this.loadProductCategoryData()\r\n        cb({ status: true, message: \"Product category added\" })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        cb({ status: false, message: \"Some Error occured\" })\r\n      })\r\n  }\r\n\r\n  callback(key) {\r\n    // console.log(key);\r\n  }\r\n  render() {\r\n    if (true) {\r\n      return (\r\n        <div>\r\n          <Categories\r\n            cardData={categoryData.cardData}\r\n            cascaderData={categoryData.cascaderData}\r\n            columns={categoryData.categoryColumns}\r\n            columnData={this.state.productsTableData}\r\n            onCreate={(data, cb) => this.handleCreateProductCategory(data, cb)}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      return <h1>Loading</h1>\r\n    }\r\n  }\r\n  _createProductCategory = data => {\r\n    let temp = []\r\n    if (Array.isArray(data)) {\r\n      data.map(item => {\r\n        let object = {}\r\n        object.name = item.name,\r\n          object.productcategoryID = item.productcategoryID,\r\n          // object.inventory = [50],\r\n          object.handleFeatures = {\r\n            handleDelete: (id) => {\r\n              // let businessID = this.props.business.response.data.businessID;\r\n              this.props.deleteProductCategory(id).then(res => {\r\n                this.loadProductCategoryData();\r\n              }).catch(err => {\r\n                console.log(err);\r\n              })\r\n            },\r\n            editProductCategory: (data, id, cb) => {\r\n              // console.log(\"clicked\", data, id, cb)\r\n              this.props.updateProductCategory(id, data.values).then(res => {\r\n                this.loadProductCategoryData()\r\n                cb({ status: true, message: \"Product category updated\" })\r\n              }).catch(err => {\r\n                console.log(err)\r\n                cb({ status: false, message: \"Some Error while updating\" })\r\n              })\r\n            }\r\n          }\r\n        temp.push(object)\r\n      })\r\n    } else {\r\n      let object = {}\r\n      object.name = data.name,\r\n        object.productcategoryID = data.productcategoryID,\r\n        object.handleFeatures = {\r\n          handleDelete: (id) => {\r\n            // let businessID = this.props.business.response.data.businessID;\r\n            this.props.deleteProductCategory(id).then(res => {\r\n              this.loadProductCategoryData();\r\n            }).catch(err => {\r\n              console.log(err);\r\n            })\r\n          },\r\n          editProductCategory: (data, id, cb) => {\r\n            this.props.updateProductCategory(id, data.values).then(res => {\r\n              this.loadProductCategoryData()\r\n              cb({ status: true, message: \"Product category updated\" })\r\n            }).catch(err => {\r\n              console.log(err)\r\n              cb({ status: false, message: \"Some Error occured while updating\" })\r\n            })\r\n          }\r\n        }\r\n      temp.push(object)\r\n    }\r\n    return temp\r\n  }\r\n\r\n  loadProductCategoryData = () => {\r\n    let urlParams = {}\r\n    urlParams.businessID = this.props.business.response.data.businessID\r\n    this.props\r\n      .getProductCategory(urlParams)\r\n      .then(res => {\r\n        this.setState({ productsTableData: this._createProductCategory(res) })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  business: state.businesses,\r\n  productCategories: state.productCategories,\r\n  addProductCategory: state.addProductCategory,\r\n  deleteProductCategory: state.deleteProductCategory,\r\n  updateProductCategory: state.updateProductCategory\r\n})\r\n// Example Syntax for writing dispatch\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProductCategory: (businessID) => dispatch(productCategories.action(businessID)),\r\n  addProductCategory: (businessID, object) => dispatch(addProductCategory.action(businessID, object)),\r\n  deleteProductCategory: (productcategoryID) => dispatch(deleteProductCategory.action(productcategoryID)),\r\n  updateProductCategory: (productcategoryID, object) => dispatch(updateProductCategory.action(productcategoryID, object))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}