{"ast":null,"code":"import \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nvar Option = _Select.Option;\n\nfunction handleChange(value) {\n  console.log(\"selected \".concat(value));\n}\n\nfunction handleBlur() {\n  console.log('blur');\n}\n\nfunction handleFocus() {\n  console.log('focus'); // console.log(Option)\n}\n\nfunction filterOptions(input, option) {\n  console.log(\"input\", input, \"option\", option);\n  return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n}\n\nvar Cascader = function Cascader(props) {\n  // console.log(props)\n  return React.createElement(_Select, {\n    showArrow: true,\n    allowClear: true,\n    style: props.style,\n    placeholder: props.placeholder,\n    optionFilterProp: \"children\",\n    onChange: props.handleChange,\n    onFocus: props.handleFocus,\n    onBlur: props.handleBlur,\n    filterOption: props.filterOptions\n  }, props.optionArray.length != 0 ? props.optionArray.map(function (data, index) {\n    return React.createElement(Option, {\n      value: data\n    }, data);\n  }) : React.createElement(Option, {\n    value: \"noData\",\n    disabled: true\n  }, \"No Data Found\"));\n};\n\nCascader.defaultProps = {\n  optionArrray: [],\n  placeholder: 'Select One',\n  style: {\n    width: \"100%\"\n  }\n};\nexport default Cascader;","map":{"version":3,"sources":["/Users/subham/Desktop/work/skip/skip-frontend/src/components/molecules/cascader/index.js"],"names":["React","PropTypes","Option","handleChange","value","console","log","handleBlur","handleFocus","filterOptions","input","option","props","children","toLowerCase","indexOf","Cascader","style","placeholder","optionArray","length","map","data","index","defaultProps","optionArrray","width"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAIA,IAAMC,MAAM,GAAG,QAAOA,MAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,oBAAwBF,KAAxB;AACD;;AAED,SAASG,UAAT,GAAsB;AACpBF,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AAED,SAASE,WAAT,GAAuB;AACrBH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADqB,CAErB;AACD;;AAED,SAASG,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACpCN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB,EAA2B,QAA3B,EAAqCC,MAArC;AACA,SAAOA,MAAM,CAACC,KAAP,CAAaC,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CL,KAAK,CAACI,WAAN,EAA5C,KAAoE,CAA3E;AACD;;AAED,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAW;AACxB;AACA,SACI;AACI,IAAA,SAAS,MADb;AACc,IAAA,UAAU,MADxB;AAEI,IAAA,KAAK,EAAEA,KAAK,CAACK,KAFjB;AAGI,IAAA,WAAW,EAAEL,KAAK,CAACM,WAHvB;AAII,IAAA,gBAAgB,EAAC,UAJrB;AAKI,IAAA,QAAQ,EAAEN,KAAK,CAACT,YALpB;AAMI,IAAA,OAAO,EAAES,KAAK,CAACJ,WANnB;AAOI,IAAA,MAAM,EAAEI,KAAK,CAACL,UAPlB;AAQI,IAAA,YAAY,EAAEK,KAAK,CAACH;AARxB,KAUCG,KAAK,CAACO,WAAN,CAAkBC,MAAlB,IAA2B,CAA3B,GACGR,KAAK,CAACO,WAAN,CAAkBE,GAAlB,CAAsB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACnC,WAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAED;AAAf,OAAsBA,IAAtB,CAAP;AACH,GAFD,CADH,GAKG,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,QAAQ;AAA/B,qBAfJ,CADJ;AAsBH,CAxBD;;AA0BAN,QAAQ,CAACQ,YAAT,GAAwB;AACpBC,EAAAA,YAAY,EAAE,EADM;AAEpBP,EAAAA,WAAW,EAAE,YAFO;AAGpBD,EAAAA,KAAK,EAAE;AAAES,IAAAA,KAAK,EAAC;AAAR;AAHa,CAAxB;AAMA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Select} from 'antd';\n\n\nconst Option = Select.Option;\n\nfunction handleChange(value) {\n  console.log(`selected ${value}`);\n}\n\nfunction handleBlur() {\n  console.log('blur');\n}\n\nfunction handleFocus() {\n  console.log('focus');\n  // console.log(Option)\n}\n\nfunction filterOptions(input, option) {\n  console.log(\"input\", input,\"option\", option)\n  return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n}\n\nconst Cascader = (props) => {\n    // console.log(props)\n    return(\n        <Select\n            showArrow allowClear\n            style={props.style}\n            placeholder={props.placeholder}\n            optionFilterProp=\"children\"\n            onChange={props.handleChange}\n            onFocus={props.handleFocus}\n            onBlur={props.handleBlur}\n            filterOption={props.filterOptions}\n        >\n        {props.optionArray.length !=0  ? (\n            props.optionArray.map((data, index) => {\n                return <Option value={data}>{data}</Option>\n            })\n        ) : (\n            <Option value='noData' disabled>No Data Found</Option>\n        )}\n\n\n        </Select>\n    )\n}\n\nCascader.defaultProps = {\n    optionArrray: [],\n    placeholder: 'Select One',\n    style: { width:\"100%\"}\n}\n\nexport default Cascader;"]},"metadata":{},"sourceType":"module"}